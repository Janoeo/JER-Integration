buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

def majorVersion = 4
def minorVersion = 3
def buildVersion = 1
def isExperimental = false
version = "${majorVersion}.${minorVersion}.${buildVersion}"
if (isExperimental) {
    version += '-experimental'
}

group = 'fr.alasdiablo.jerintegration'
archivesBaseName = 'JER-Integration'

def manifestAttributes = [
        "Specification-Title"     : "JER-Integration",
        "Specification-Vendor"    : "AlasDiablo",
        "Specification-Version"   : "1",
        "Implementation-Title"    : project.name,
        "Implementation-Version"  : project.jar.archiveVersion,
        "Implementation-Vendor"   : "AlasDiablo",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
]

def outputFolder = file(rootProject.getRootDir().getPath() + '/output')

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

def deobfSourceClassifier

minecraft {
    mappings channel: 'parchment', version: '2022.09.04-1.19.2'
    deobfSourceClassifier = getMappings().get()
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'jerintegration'
            mods {
                jerintegration {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'jerintegration'
            mods {
                jerintegration {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'jerintegration'
            mods {
                jerintegration {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'jerintegration', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                jerintegration {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://www.cursemaven.com/' }
    maven { url 'https://maven.tterrag.com/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.1.32'

    implementation fileTree(dir:'lib', include:'*.jar')

    implementation fg.deobf('curse.maven:jei-238222:3969039')                       // JEI (11.3.0.262)
    implementation fg.deobf('curse.maven:just-enough-resources-jer-240630:3951643') // JER (1.1.0.179)

    implementation fg.deobf('curse.maven:immersiveengineering-231951:3963698')      // Immersive Engineering (9.0.0-153)

    implementation fg.deobf('curse.maven:create-328085:4547147')                    // Create (v0.5.1a)
    compileOnly fg.deobf('com.tterrag.registrate:Registrate:MC1.19-1.1.5')          // Create source dependencies

    implementation fg.deobf('curse.maven:mekanism-268560:3954410')                  // Mekanism (10.3.3.470)

    implementation fg.deobf('curse.maven:extreme-reactors-250277:3927548')          // Extreme Reactors (2.0.54)
    implementation fg.deobf('curse.maven:zerocore-247921:3927546')                  // Zero Core (2.1.25)

    implementation fg.deobf('curse.maven:randomite-classic-375134:3905205')         // Randomite Classic (v1.1.2)

    // implementation fg.deobf('curse.maven:mantle-74924:3784500')                     // Mantle (1.9.20)
    // implementation fg.deobf('curse.maven:tinkers-construct-74072:3784732')          // Tinkers' Construct (3.5.0.17)

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest.attributes(manifestAttributes)
    destinationDirectory.set(file(rootProject.getRootDir().getPath() + '/output'))
}

jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    def archiveName = 'sources-' + deobfSourceClassifier
    archiveClassifier.set(archiveName)
    destinationDirectory.set(outputFolder)
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    def archiveName = 'deobf-' + deobfSourceClassifier
    archiveClassifier.set(archiveName)
    manifest.attributes(manifestAttributes)
    destinationDirectory.set(outputFolder)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

artifacts {
    archives jar
    archives sourcesJar
    archives deobfJar
}